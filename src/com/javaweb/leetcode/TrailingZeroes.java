package com.javaweb.leetcode;

public class TrailingZeroes {

    //leetcode172
    //求 0来自10。10来自2 x 5， 我们需要考虑所有5和2的数。但是由于因子为2或者2的倍数的数远远大于5，所以我们寻找5为因子或者5的倍数为因子的数
    //
    //1到23之间有多少个5的倍数？有5,10,15和20，是5的四倍。与偶数因素2相配，这就是四个因子10，所以：23！有4个零。
    //
    //例二
    //从1到100的数字有多少个5？因为100÷5 = 20，所以在1到100之间有5个20的倍数。但是，实际上25是5×5，
    // 因此25的每个倍数具有5的额外因子，例如25×4 = 100，引入了额外的零。
    // 那么，我们需要知道有多少25的倍数在1到100之间呢？由于100÷25 = 4，因此在1到100之间有四个倍数25。
    // 最后，我们得到20 + 4 = 24的尾数为100！
    //上面的例子告诉我们，我们需要关心5,5×5,5×5×5,5×5×5×5 ....
    //
    //代码中，第一次除以5是寻找5的倍数的个数，第二次除以5，是寻找 5 * 5的倍数的个数，第三次除以5，是寻找 5 * 5 * 5的倍数的个数，所以代码才这样写
    //刚刚就是这里想不明白
    public int trailingZeroes(int n) {
        int res = 0;
        while(n > 0){
            n /= 5;
            res = res + n;
        }
        return res;
    }
}
